"
"                              _                __
"            o ._ _  ._ _   _|_ _  ._   |/ __ /__  _. ._ _  ._ _   _.
"       o \/ | | | | | (_    | (_) |    |\    \_| (_| | | | | | | (_|
"       _____________________________________________________________
"
"
" Note: Skip initialization when -eval(vim-tiny, vim-small)
if 0 | finish | endif

let s:rc = fnamemodify(expand('<sfile>'), ':h').'/rc'
function! s:source(file) abort
  let path = s:rc . '/' . a:file
  if filereadable(path)
    execute 'source' . 'path'
  endif
endfunction

if has('vim_starting')
  call s:source('init.rc.vim')
endif

" Load the plugins setting
if $SUDO_USER ==# ''
  call s:source('dein.rc.vim')
endif

if has('vim_starting') && !empty(argv()) " TODO: check
  call vimrc#on_filetype()
endif

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')
endif

"---------------------------------------------------------------------------

call s:source('encoding.rc.vim')
call s:source('options.rc.vim')
call s:source('mappings.rc.vim')

if has('nvim')
  call s:source('neovim.rc.vim')
endif

if os#is_windows()
  call s:source('windows.rc.vim')
else
  call s:source('unix.rc.vim')
endif

if !has('nvim') && has('gui_running')
  call s:source('gui.rc.vim')
endif

"---------------------------------------------------------------------------

" vim: fdm=marker
