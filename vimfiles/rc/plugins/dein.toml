### This is a file to set up vim plugins
### TOML file format specification:
### https://github.com/toml-lang/toml

#===========================================================================

# Required:
# joshdick/onedark.vim:                                                       {{{
#==============================================================================

[[plugins]]
repo = 'joshdick/onedark.vim'
merged = 0
hook_add = '''
    " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
    " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
    au MyAutoCmd VimEnter * nested colorscheme onedark
'''

#===========================================================================}}}
# Shougo/dein.vim:                                                          {{{
#==============================================================================
# Dein.vim is a dark powered Vim/Neovim plugin manager.

[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
    let g:dein#types#git#default_protocol = "ssh" "The default protocol used for git (github).
'''

#===========================================================================}}}
# wsdjeg/dein-ui.vim:                                                       {{{
#==============================================================================
# UI for Shougo's dein.vim, detached from SpaceVim

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

# Dein.vim is a dark powered Vim/Neovim plugin manager.
#===========================================================================}}}
# airblade/vim-gitgutter:                                                   {{{
#==============================================================================

[[plugins]] # gitの差分を表示するプラグイン
repo = 'airblade/vim-gitgutter'

#===========================================================================}}}
# itchyny/lightline.vim:                                                    {{{
#==============================================================================

[[plugins]] # ステータスバーをかっこよくするプラグイン
repo = 'itchyny/lightline.vim'
hook_add = '''
    if dein#tap('ale')
        function! LLAle()
            let l:count = ale#statusline#Count(bufnr(''))
            let l:errors = l:count.error + l:count.style_error
            let l:warnings = l:count.warning + l:count.style_warning
            return l:count.total == 0 ? 'OK' : 'E:' . l:errors . ' W:' . l:warnings
        endfunction
    else
        function! LLAle()
            return ''
        endfunction
    endif

    " Please look a default -> :help lightline
    let g:lightline = {
    \   'colorscheme': 'wombat',
    \   'active': {
    \       'left': [
    \           [ 'mode', 'paste' ],
    \           [ 'gitbranch', 'readonly', 'filename', 'modified', 'ale'],
    \       ]
    \   },
    \   'inactive': {
    \       'left': [ [ 'filename', 'modified', 'ale'] ],
    \   },
    \   'component_function': {
    \       'gitbranch': 'gitbranch#name',
    \       'ale': 'LLAle',
    \   },
    \ }

set laststatus=2    " 末尾から2行目にステータスラインを表示
set noshowmode      " 現在のモードを表示しない
set showcmd         " 入力コマンドを表示
set ruler           " カーソル位置を表示する
'''

#===========================================================================}}}
# itchyny/vim-gitbranch:                                                    {{{
#==============================================================================
# This plugin provides a function which returns the name of the git branch.

[[plugins]]
repo = 'itchyny/vim-gitbranch'

#===========================================================================}}}
# kana/vim-niceblock:                                                       {{{
#==============================================================================
# Make blockwise Visual mode more useful

[[plugins]]
repo = 'kana/vim-niceblock'

#===========================================================================}}}
# kana/vim-textobj-user:                                                    {{{
#==============================================================================
# vim-textobj-user is a Vim plugin to create your own text objects without pain.

[[plugins]]
repo = 'kana/vim-textobj-user'

#===========================================================================}}}
# tyru/open-browser.vim:                                                    {{{
#==============================================================================
# Open URI with your favorite browser from your most favorite editor.

[[plugins]]
repo = 'tyru/open-browser.vim'

#===========================================================================}}}
## kannokanno/previm: -> previm or vim-markdown or vim-instant-markdown or mattn/mkup                  {{{
##==============================================================================
#
#[[plugins]] # Markdownの表示をVimのみで完結できるプラグイン
#repo = 'kannokanno/previm'
#depends = ['open-browser.vim']
#hook_add = '''
#    au MyAutoCmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
#'''
#
##===========================================================================}}}
# tpope/vim-surround:                                                       {{{
#==============================================================================

[[plugins]] # 囲んでいるものに対して操作を行うプラグイン
repo = 'tpope/vim-surround'

#===========================================================================}}}
## Shougo/defx.nvim:                                                         {{{
##==============================================================================
## The dark powered file explorer implementation
#
#[[plugins]]
#repo = 'Shougo/defx.nvim'
#on_if = 'has("nvim") || has("python3")'
#hook_add = '''
#    let g:dein#types#git#default_protocol = "ssh" "The default protocol used for git (github).
#'''
#
##===========================================================================}}}
## Shougo/deol.nvim:                                                         {{{
##==============================================================================
## Deol.nvim is a dark powered shell for Neovim. It is based on neovim or Vim terminal feature.
#
#[[plugins]]
#repo = 'Shougo/deol.nvim'
#on_if = 'has("nvim") || has("terminal")'
#
##===========================================================================}}}
# thinca/vim-quickrun:                                                      {{{
#==============================================================================

[[plugins]] # バッファ上のコードを実行するためのプラグイン
repo = 'thinca/vim-quickrun'

#===========================================================================}}}
## lambdalisue/vim-pyenv: -> correspondence to python conf soft              {{{
##==============================================================================
#
#[[plugins]] # Pythonバージョンに沿った正しい補完リストを返すためのプラグイン
#repo = 'lambdalisue/vim-pyenv'
#depends = ['jedi-vim']
#on_ft = 'python'
#
##===========================================================================}}}
# Shougo/context_filetype.vim:                                              {{{
#==============================================================================
# Provides functions to find fenced code blocks and their filetype.

[[plugins]]
repo = 'Shougo/context_filetype.vim'

#===========================================================================}}}
# osyo-manga/vim-precious:                                                  {{{
#==============================================================================
# Set the buffer filetype based on the code block the cursor currently resides in.
# See https://github.com/Shougo/context_filetype.vim/issues/1

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

#===========================================================================}}}
# thinca/vim-ft-help_fold:                                                  {{{
#==============================================================================

[[plugins]] # ヘルプを自動で折りたたむプラグイン
repo = 'thinca/vim-ft-help_fold'

#===========================================================================}}}
# thinca/vim-qfreplace:                                                     {{{
#==============================================================================

[[plugins]] # :grepした結果を置換するプラグイン
repo = 'thinca/vim-qfreplace'

#===========================================================================}}}
#===========================================================================
# vim: fdm=marker fdc=3 fdl=0
